---

- name: Add oauth2-proxy chart repo
  kubernetes.core.helm_repository:
    repo_name: oauth2-proxy
    repo_url: https://oauth2-proxy.github.io/manifests

- name: Show values for deployment of oauth2-proxy
  ansible.builtin.debug:
    msg: "{{ lookup('template', 'oauth2-proxy-values.yaml') | from_yaml }}"

- name: Deploy oauth2-proxy chart
  kubernetes.core.helm:
    name: oauth2-proxy
    chart_ref: oauth2-proxy/oauth2-proxy
    release_namespace: kubernetes-dashboard
    create_namespace: true
    update_repo_cache: true
    chart_version: 6.23.1
    values: "{{ lookup('template', 'oauth2-proxy-values.yaml') | from_yaml }}"

- name: Add kubernetes-dashboard chart repo
  kubernetes.core.helm_repository:
    repo_name: kubernetes-dashboard
    repo_url: https://kubernetes.github.io/dashboard/

- name: Show values for deployment of kubernetes-dashboard
  ansible.builtin.debug:
    msg: "{{ lookup('template', 'kubernetes-dashboard-values.yaml') | from_yaml }}"

- name: Deploy kubernetes-dashboard chart
  kubernetes.core.helm:
    name: kubernetes-dashboard
    chart_ref: kubernetes-dashboard/kubernetes-dashboard
    release_namespace: kubernetes-dashboard
    create_namespace: true
    update_repo_cache: true
    chart_version: 6.0.8
    values: "{{ lookup('template', 'kubernetes-dashboard-values.yaml') | from_yaml }}"

# Run on all control plane nodes
- name: Enable OIDC for cluster
  ansible.builtin.blockinfile:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    insertafter: "    - --advertise-address="
    marker: "# {mark} ANSIBLE MANAGED BLOCK - OIDC"
    block: "{{ lookup('template', 'oidc-settings.j2') }}"
  delegate_to: "{{ item }}"
  loop: "{{ groups['kube_control'] }}"

- name: Sleep for 60 seconds and continue
  ansible.builtin.wait_for:
    timeout: 60

- name: Create cluster role binding for kube admins
  kubernetes.core.k8s:
    namespace: default
    definition:
      kind: ClusterRoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: oidc-group-admin-kube-apiserver
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
        - kind: Group
          name: kube-apiserver-admins
    apply: true
    server_side_apply:
      field_manager: ansible
