---

- name: Ensure basic kubernetes software is installed
  community.general.pacman:
    name:
      - kubeadm
      - kubelet
      - containerd
      - cilium-cli
      - jq
      - python-kubernetes
      - helm
    state: present
    extra_args: --ask 4

- name: Ensure control-plane kubernetes software is installed
  community.general.pacman:
    name:
      - kubectl
    state: present
  when: kubernetes_control_plane_node | bool

- name: Make sure modules are loaded
  community.general.modprobe:
    name: "{{ item }}"
    state: present
  loop: "{{ kubernetes_modprobe_modules }}"

- name: Add required modules
  ansible.builtin.template:
    src: k8s-modules.conf.j2
    dest: /etc/modules-load.d/k8s.conf
    mode: "0644"
    owner: root
    group: root

- name: Add and load required params
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_file: /etc/sysctl.d/k8s.conf
    reload: true
  loop: "{{ kubernetes_sysctl_params }}"

- name: Make sure containerd dir exists
  ansible.builtin.file:
    dest: /etc/containerd
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Check if containerd config exists
  ansible.builtin.stat:
    path: /etc/containerd/config.toml
  register: kubernetes_containerd_config_result

- name: Generate containerd config
  ansible.builtin.shell:
    cmd: containerd config default > /etc/containerd/config.toml
  changed_when: true
  when: not kubernetes_containerd_config_result.stat.exists | bool

- name: Set cgroup driver
  ansible.builtin.lineinfile:
    regexp: SystemdCgroup =
    line: "             SystemdCgroup = true"
    path: /etc/containerd/config.toml

- name: Enable and start containerd service
  ansible.builtin.systemd:
    name: containerd
    state: started
    enabled: true

- name: Enable and start kubelet service
  ansible.builtin.systemd:
    name: kubelet
    state: started
    enabled: true

- name: Join node
  ansible.builtin.import_tasks: join.yml
  tags: [kube-join]
  when:
    - kubernetes_join_cluster | bool

- name: Configure kube-vip
  ansible.builtin.import_tasks: kube-vip.yml
  tags: [kube-vip]
  when:
    - kubernetes_control_plane_node | bool

- name: Initialize cluster
  ansible.builtin.import_tasks: init.yml
  tags: [kube-init]
  when:
    - kubernetes_control_plane_node | bool
    - kubernetes_init_cluster | bool

- name: Configure kubectl
  ansible.builtin.import_tasks: kubectl.yml
  when:
    - kubernetes_control_plane_node | bool

- name: Configure kube-vip-cloud-provider
  ansible.builtin.import_tasks: kube-vip-cp.yml
  tags: [kube-vip, kube-vip-cp]
  when:
    - kubernetes_control_plane_node | bool

- name: Enable OIDC for cluster
  ansible.builtin.blockinfile:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    insertafter: "    - --advertise-address="
    marker: "# {mark} ANSIBLE MANAGED BLOCK - OIDC"
    block: "{{ lookup('template', 'oidc-settings.j2') }}"
  delegate_to: "{{ item }}"
  loop: "{{ groups['kube_control'] }}"
