---

- name: Add mkinitcpio.conf hooks
  ansible.builtin.lineinfile:
    dest: /mnt/etc/mkinitcpio.conf
    regexp: ^HOOKS=
    line: HOOKS=({{ installation_mkinitcpio_hooks }})

- name: Add mkinitcpio.conf modules
  ansible.builtin.lineinfile:
    dest: /mnt/etc/mkinitcpio.conf
    regexp: ^MODULES=
    line: MODULES=({{ installation_mkinicpio_modules | trim + ' ' + installation_tpm_driver.stdout | default('') }})

- name: Create linux preset
  ansible.builtin.template:
    src: linux.preset.j2
    dest: /mnt/etc/mkinitcpio.d/linux.preset
    owner: root
    group: root
    mode: "0600"

- name: Create cmdline dir
  ansible.builtin.file:
    dest: /mnt/etc/cmdline.d
    owner: root
    group: root
    mode: "0700"
    state: directory

- name: Configure kernel parametres
  ansible.builtin.copy:
    content: >
      zfs={{ installation_zfs_root_dataset }} rw nosgx {{ installation_kernel_cmdline }}
    dest: /mnt/etc/cmdline.d/arch.conf
    owner: root
    group: root
    mode: "0600"

- name: Make sure EFI dir exists
  ansible.builtin.file:
    path: /mnt{{ installation_efi_partiton_mount_point }}/EFI/Linux
    state: directory
    mode: "0700"

- name: Generate hostid
  ansible.builtin.shell: arch-chroot /mnt zgenhostid -f "$(hostid)"
  changed_when: true

- name: Create new initramfs
  ansible.builtin.command: arch-chroot /mnt mkinitcpio -P
  register: installation_initramfs_result
  failed_when: installation_initramfs_result.rc != 0 and installation_initramfs_result.rc != 1
  changed_when: true
