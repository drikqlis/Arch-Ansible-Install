---
# Installing basic software
# --------------------------------------------------------------------

- name: Ensure basic software is installed
  hosts: archinstalled
  become: true

  tasks:

    # Install packages
    # --------------------------------------------------------------------

    - name: Ensure packages are updated
      pacman:
        update_cache: yes
        upgrade: yes

    - name: Ensure packages are installed
      pacman:
        name:
          - pacman-contrib
          - reflector
          - ufw
        state: present

    # Configure pacman cache
    # --------------------------------------------------------------------

    - name: Ensure paccache timer is enabled and started
      systemd:
        name: paccache.timer
        enabled: yes
        state: started

    - name: Ensure paccache.service.d directory exists
      file:
        path: /etc/systemd/system/paccache.service.d/
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Ensure paccache.service override exists
      copy:
        content: |
          [Service]
          ExecStart=
          ExecStart=/usr/bin/paccache -rk1 ; /usr/bin/paccache -ruk0
        dest: /etc/systemd/system/paccache.service.d/override.conf
        owner: root
        group: root
        mode: 0644
      notify: daemon-reload

    # Configure reflector
    # --------------------------------------------------------------------

    - name: Ensure reflector config is correct
      lineinfile:
        dest: /etc/xdg/reflector/reflector.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: "^#?.?--country", line: "--country Poland,Germany,France" }
        - { regexp: "^#?.?--sort", line: "--sort rate" }

    - name: Ensure reflector timer is enabled and started
      systemd:
        name: reflector.timer
        enabled: yes
        state: started
      notify: run-reflector



    # Configure ufw
    # --------------------------------------------------------------------

    - name: Configure ufw defaults
      ufw: direction={{ item.direction }} policy={{ item.policy }}
      with_items:
        - { direction: 'incoming', policy: 'deny' }
        - { direction: 'outgoing', policy: 'allow' }
      notify:
        - restart-ufw

    - name: Configure ufw rules
      ufw:
        rule: limit
        port: 22
        proto: tcp
        src: 192.168.0.0/16
      notify:
        - restart-ufw

    - name: Enable ufw logging
      ufw: logging=on
      notify:
        - restart-ufw

    - name: Enable ufw
      ufw:
        state: enabled

    - name: Enable ufw service
      systemd:
        name: ufw
        state: started
        enabled: yes

    # Enable NTP
    # --------------------------------------------------------------------

    - name: Enable timesyncd service
      systemd:
        name: systemd-timesyncd
        state: started
        enabled: yes
      notify:
        - run-timedatectl

    # Limit log size
    # --------------------------------------------------------------------

    - name: Limit log size to 200mb
      lineinfile:
        dest: /etc/systemd/journald.conf
        regexp: ^#?SystemMaxUse=
        line: SystemMaxUse=200M

    # Default editor
    # --------------------------------------------------------------------

    - name: Set nano as default editor
      copy:
        content: EDITOR=nano
        dest: /etc/environment

  # Handlers
  # --------------------------------------------------------------------

  handlers:

    - name: daemon-reload
      systemd:
        daemon_reload: true

    - name: restart-ufw
      systemd:
        name: ufw
        state: restarted

    - name: run-reflector
      systemd:
        name: reflector
        state: started

    - name: run-timedatectl
      command: timedatectl set-ntp true
